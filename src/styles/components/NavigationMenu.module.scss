@import "../placeholders";
@import "../breakpoints";

.component {
  background-color: var(--navigation-menu--background-color);
  align-items: center;
  justify-content: center;

  @media (min-width: $breakpoint-small) {
    display: flex;
  }
}

.menu {
  list-style-type: none;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  padding: 0;
  margin: 0;
  position: relative;
  gap: 0.5rem;

  li {
    display: flex;
    align-items: center;
    position: relative;
    width: 100%;
    flex-direction: column;

    @media (min-width: $breakpoint-small) {
      width: auto;
      flex-direction: row;
    }

    &:focus-within ul,
    a:hover + ul,
    a:focus + ul {
      @extend %visible;
    }
  }

  a {
    color: var(--navigation-menu--color);
    padding: 0.75rem;
    display: block;
    width: 100%;
    white-space: nowrap;
    text-align: center;

    &:hover,
    &:focus {
      color: var(--navigation-menu--color--hover);
    }

    // Remove link underline when component is inside header.
    header & {
      text-decoration: none;
    }
  }

  li ul {
    @extend %hidden;
    background-color: var(--dropdown--background-color);
    display: flex;
    flex-direction: column;
    gap: 0;
    width: 100%;

    @media (min-width: $breakpoint-small) {
      position: absolute;
      left: -10px;
      top: 100%;
      text-align: left;
      box-shadow: var(--shadow--large);
      padding: 1rem;
      border-radius: 8px;
      width: inherit;
      border: var(--border--extra-light);
    }

    &:hover {
      @extend %visible;
    }

    li + li {
      @media (min-width: $breakpoint-small) {
        border-top: var(--border--light);
        margin-top: 3px; // Make room for default browser focus styles.
      }
    }
  }
}
